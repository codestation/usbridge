IF(NOT LIBUSB_FOUND)
IF(WIN32)
  # Windows with Microsoft Visual C++
  FIND_PATH(LIBUSB_INCLUDE_DIRS libusb.h PATHS "$ENV{ProgramFiles}/LibUSB/include" "${LIBUSB_HINT_WINDOWS_DIR}/include")
  message(STATUS "${LIBUSB_INCLUDE_DIRS}")
  IF(MSVC)
    IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86")
      # on x86 (win32)
      FIND_LIBRARY(LIBUSB_LIBRARIES libusb-1.0 PATHS "$ENV{ProgramFiles}/LibUSB/lib/MS32" "${LIBUSB_HINT_WINDOWS_DIR}/lib/MS32")
    ELSE(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86")
      # on x86_64 (win64)
      FIND_LIBRARY(LIBUSB_LIBRARIES libusb-1.0 PATHS "$ENV{ProgramFiles}/LibUSB/lib/MS64" "${LIBUSB_HINT_WINDOWS_DIR}/lib/MS64")
    ENDIF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86")
  ENDIF(MSVC)
  IF(MINGW)
    IF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86")
      # on x86 (win32)
      FIND_LIBRARY(LIBUSB_LIBRARIES libusb-1.0 PATHS "$ENV{ProgramFiles}/LibUSB/lib/MinGW32" "${LIBUSB_HINT_WINDOWS_DIR}/lib/MinGW32")
    ELSE(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86")
      # on x86_64 (win64)
      FIND_LIBRARY(LIBUSB_LIBRARIES libusb-1.0 PATHS "$ENV{ProgramFiles}/LibUSB/lib/MinGW64" "${LIBUSB_HINT_WINDOWS_DIR}/lib/MinGW64")
    ENDIF(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86")
  ENDIF(MINGW)
ELSE(WIN32)
  # If not under Windows we use PkgConfig
  FIND_PACKAGE (PkgConfig)
  IF(PKG_CONFIG_FOUND)
    PKG_CHECK_MODULES(LIBUSB REQUIRED libusb-1.0)
  ELSE(PKG_CONFIG_FOUND)
    MESSAGE(FATAL_ERROR "Could not find PkgConfig")
  ENDIF(PKG_CONFIG_FOUND)
ENDIF(WIN32)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBUSB DEFAULT_MSG LIBUSB_LIBRARIES LIBUSB_INCLUDE_DIRS)

ENDIF(NOT LIBUSB_FOUND)
